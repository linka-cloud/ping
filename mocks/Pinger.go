// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import go_ping "gitlab.bertha.cloud/partitio/isi/ping/go-ping"
import mock "github.com/stretchr/testify/mock"

// Pinger is an autogenerated mock type for the Pinger type
type Pinger struct {
	mock.Mock
}

// AddAddress provides a mock function with given fields: a
func (_m *Pinger) AddAddress(a string) error {
	ret := _m.Called(a)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveAddress provides a mock function with given fields: a
func (_m *Pinger) RemoveAddress(a string) error {
	ret := _m.Called(a)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *Pinger) Run() {
	_m.Called()
}

// Status provides a mock function with given fields:
func (_m *Pinger) Status() map[string]go_ping.Statistics {
	ret := _m.Called()

	var r0 map[string]go_ping.Statistics
	if rf, ok := ret.Get(0).(func() map[string]go_ping.Statistics); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]go_ping.Statistics)
		}
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *Pinger) Stop() {
	_m.Called()
}
